name: Docker

on:
  push:
    branches: aoirint
    paths:
      - 'src/Impostor.Server/**'
      - 'src/Impostor.Shared/**'
      - '.gitmodules'
      - '.github/workflows/docker.yml'
      - 'Dockerfile'
    tags:
      - '*'
  pull_request:
    paths:
      - 'src/Impostor.Server/**'
      - 'src/Impostor.Shared/**'
      - '.gitmodules'
      - '.github/workflows/docker.yml'
      - 'Dockerfile'

jobs:
  push_to_registry:
    name: Push Docker image
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - suffix: ''
            runtime_image: mcr.microsoft.com/dotnet/runtime:7.0
          - suffix: -dotnet
            runtime_image: mcr.microsoft.com/dotnet/runtime:7.0
          - suffix: -aspnet
            runtime_image: mcr.microsoft.com/dotnet/aspnet:7.0

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=aoirint/impostor
          VERSION=noop
          VERSIONSUFFIX=docker
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            VERSIONSUFFIX=none
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=nightly
            VERSIONSUFFIX=docker.${{ github.run_number }}
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION=pr-${{ github.event.number }}
            VERSIONSUFFIX=pr.${{ github.event.number }}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}${{ matrix.suffix }}"
          # if [[ $VERSION =~ ^v[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
          TAGS="$TAGS,${DOCKER_IMAGE}:latest${{ matrix.suffix }}"
          # fi
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=versionsuffix::${VERSIONSUFFIX}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.prep.outputs.tags }}
          build-args: |
            VERSIONSUFFIX=${{ steps.prep.outputs.versionsuffix }}
            RUNTIME_IMAGE=${{ matrix.runtime_image }}
